operation place(plot_id: integer, x: integer, y: integer, collection: name, token_id: integer) {
  val account = ft4.auth.authenticate();

  val token = require(yours.get_token(common.PROJECT_NAME, collection, token_id));
  val locked_account = yours.ensure_locked_account(account.id);
  val spec = yours.transfer_specification(
    from = account,
    to = locked_account,
    amount = 1
  );
  yours.transfer_tokens(token, spec);

  val placeable = placeable @ { .token.id == token_id };
  delete placed_position @? { plot_id, x, y };
  create placed_position ( plot_id, x, y, placeable );
}

operation unplace(plot_id: integer, x: integer, y: integer) {
  val account = ft4.auth.authenticate();

  val placed_position = placed_position @ {
    plot_id,
    x,
    y
  };

  val locked_account = yours.ensure_locked_account(account.id);
  val spec = yours.transfer_specification(
    from = locked_account,
    to = account,
    amount = 1
  );
  yours.transfer_tokens(placed_position.placeable.token, spec);

  delete placed_position;
}

@extend(ft4.auth.auth_handler)
function place_auth() = ft4.auth.add_auth_handler(
    scope = rell.meta(place).mount_name,
    flags = ["T"]
  );
